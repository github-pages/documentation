<?xml version="1.0" encoding="UTF-8"?>  
<!-- Copyright FUJITSU LIMITED 2017 -->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
                         "concept.dtd" [<!ENTITY % entities PUBLIC '-//XDOC//ENTITIES//FujitsuUserDoc' 'entities.dtd'>
]>

<concept id="concept_1BCF5C425D7D4627AB1C66A085CF6E11" xml:lang="en-us">
    <title><ph conref="../Product_Name.xml#ProductNameTopic/Product_Abbr"/> Containers</title>
    <conbody>
        <section>
            <p id="container"><ph conref="../Product_Name.xml#ProductNameTopic/Product_Abbr"
                    /> is provided in Docker containers and deployed in a container environment such as OpenStack or a Kubernetes cluster providing for optimum performance, scalability, failover, and non-stop operation. The applications integrated with <ph
                    conref="../Product_Name.xml#ProductNameTopic/Product_Abbr"
                    /> and their data may be hosted in the same Virtual Machine (VM) as <ph
                    conref="../Product_Name.xml#ProductNameTopic/Product_Abbr"/> or in different locations.</p>
            <p id="container"
                    >The <codeph>oscm-deployer</codeph> container is used for the configuration and deployment of the following <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"/> containers:<ul>
                    <li><codeph>oscm-core</codeph>: The <ph
                            conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                        /> core application. </li>
                    <li><codeph>oscm-birt</codeph>: The report engine that <ph
                            conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                        /> uses for generating reports. </li>
                    <li><codeph>oscm-branding</codeph>: A static Web server providing an empty directory structure for customizing the layout and branding of <ph
                            conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"/> marketplaces.</li>
                    <li><codeph>oscm-help</codeph>: A static Web server providing the online help for the <ph
                            conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                        /> administration portal and marketplaces. </li>
                    <li><codeph>oscm-app</codeph>: The Asynchronous Provisioning Platform (APP) together with an OpenStack and Amazon Web Services (AWS) service controller. </li>
                    <li><codeph>oscm-db</codeph>: Database SQL server providing the database schema required for running <ph
                            conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"/> and APP. </li>
                    <li><codeph>oscm-proxy</codeph>: A static Web server providing reverse proxy functionality. </li>
                </ul></p>
            <p>
                <fig>
                    <image href="../_images/Containers.png" alt="Containers.png" width="400" height="194"/>
                </fig>
            </p>
            <p><ph conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                    /> and APP store their data in PostgreSQL databases. For each database, a volume for persistent storage is mounted during the deployment process. The databases write to these volumes so that data is preserved in case of database updates. By default, data is persisted in the following directory on the machine hosting the VM where <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                /> is deployed (the Docker host): </p>
            <p><codeph>&lt;docker>/data/oscm-db/data:/var/lib/postgresql/data</codeph></p>
            <p>where <codeph>&lt;docker></codeph> is the base directory where Docker is installed and where data is persisted. Hereafter, this directory is referred to as <codeph>/docker</codeph>. </p>
        </section>
        <section><title>Container Communication</title><p>The following figure provides an overview of the container communication on a Docker host (a VM):</p><p><image
                    href="../_images/ContainerCommunication.png" alt="ContainerCommunication.png" width="400"
                    height="255"
                /></p><p>The host-internal communication always relies on the HTTP protocol, whereas calls from outside of the host are always secured via HTTPS. The platform operator is responsible for opening the indicated ports, which can either be addressed using the FQDN or the floating IP address of the respective container. </p>To look inside a container, you can use the following command for logging in: <p>
                <codeblock>docker exec -it &lt;container name> /bin/bash</codeblock>
            </p></section>
    </conbody>
</concept>
