<?xml version="1.0" encoding="UTF-8"?>  
<!-- Copyright FUJITSU LIMITED 2018 -->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
                         "concept.dtd" [<!ENTITY % entities PUBLIC '-//XDOC//ENTITIES//FujitsuUserDoc' 'entities.dtd'>
]>

<concept id="concept_1BCF5C425D7D4627AB1C66A085CF6E11" xml:lang="en-us">
            <title>Updating Configuration Settings</title>
            <conbody>
                        <section>
            <p>The <ph conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                /> software requires a number of settings for configuring its container runtime environment. The mandatory settings must be specified in the environment variables in Docker files before deploying the containers. Usually, you need to adapt the initial settings to your environment, in particular server names, ports, paths, and user IDs.</p>
            <p>You do this by editing the following configuration files in the <codeph>/docker</codeph> directory, where <codeph>/docker</codeph> is the directory on the Docker host where all <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"/>-specific data is located:</p>
            <p>
                <ol>
                    <li>
                        <p><codeph>.env</codeph>: Configuration settings for Docker, such as images and the base data directory (default: <codeph>/docker</codeph>)</p>
                    </li>
                    <li><codeph>var.env</codeph>: Configuration settings for <ph audience="BSS"
                            conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                        />, such as mail server, database and other settings.</li>
                </ol>
            </p>
            <p audience="doc">The initial, mandatory settings are described in detail in <xref
                    href="../../Shared/reference/r_ConfigSettings_initial.xml"/>.</p>
            <p>There are additional configuration settings whose keys are also stored in the <codeph>bss</codeph> database. The settings have default values that can be viewed and partially be changed in the <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                    /> administration portal (<b>Update configuration settings</b> in the <b>Operation</b> menu). Be aware that changing the settings in the administration portal should only be used for testing purposes. Your changes will be lost as soon as <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"/> is restarted. </p>
            <p>If you want to permanently update configuration settings in the <codeph>bss</codeph> database, proceed as follows:</p>
            <p>
                <ol>
                    <li>On your Docker host, edit the <codeph>.var</codeph> and <codeph>env.var</codeph> files located in the <codeph>/docker</codeph> directory as required. </li>
                    <li>If you want to change a configuration setting that is not included <codeph>env.var</codeph> file yet, add its key and the value it shall take on to the <codeph>env.var</codeph> file. Look up the keys on the <b>Update configuration settings</b> page. They are described in detail in <xref
                            href="../../Shared/reference/r_ConfigSettings_UI.xml"
                                />. For example: <p><codeph>TIMER_INTERVAL_SUBSCRIPTION_EXPIRATION=345600000</codeph></p></li>
                    <li>Save the <codeph>env.var</codeph> file to its original location: <p><codeph>/docker/env.var</codeph></p></li>
                    <li>Stop and remove all <ph conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"><ph
                                conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"/></ph> containers:<p>
                            <codeblock>docker-compose -f docker-compose-oscm.yml stop
docker-compose -f docker-compose-oscm.yml rm -f </codeblock>
                        </p></li>
                    <li>Start the container for initializing the database and delete the finished containers: <p>
                            <codeblock>
docker-compose -f docker-compose-initdb.yml up -d oscm-db 
docker-compose -f docker-compose-initdb.yml up oscm-initdb-core 
docker-compose -f docker-compose-initdb.yml up oscm-initdb-jms 
docker-compose -f docker-compose-initdb.yml up oscm-initdb-app 
docker-compose -f docker-compose-initdb.yml up oscm-initdb-controller-openstack
docker-compose -f docker-compose-initdb.yml up oscm-initdb-controller-aws 
docker-compose -f docker-compose-initdb.yml stop 
docker-compose -f docker-compose-initdb.yml rm -f</codeblock>
                        </p></li>
                    <li>Restart all application containers:<p>
                            <codeblock>docker-compose -f docker-compose-oscm.yml up -d</codeblock>
                        </p></li>
                </ol>
            </p>
        </section>
            </conbody>
</concept>
